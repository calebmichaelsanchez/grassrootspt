$breakpoints: (
  'mobile'         : ( min-width: 480px  ),
  'mobile-plus'    : ( min-width: 640px  ),
  'ipad-portrait'  : ( min-width: 768px  ),
  'ipad-landscape' : ( min-width: 1024px ),
  'mbp-thirteen'   : ( min-width: 1280px ),
  'mbp-fifteen'    : ( min-width: 1440px ),
  'retina'         : ( min-width: 2880px )
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  // If the key doesnt exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// ======================================
// Fonts
// ======================================

@mixin font-normal() {
  font-stretch: normal;
  text-rendering: optimizeLegibility;
  margin: 0;
  padding: 0;
}
@mixin font-primary() {
  font-family: $primary;
  @include font-normal();
}
@mixin font-secondary() {
  font-family: $secondary;
  @include font-normal();
}

// ======================================
// Fonts
// ======================================

@mixin h1() {
  @include font-primary();
  font-size: rem-calc($h1);
  font-weight: 700;
  color: color(white);
}
@mixin h2() {
  @include font-primary();
  font-size: rem-calc($h2);
  font-weight: 400;
  color: color(dusk);
  text-align: center;
}
@mixin h3() {
  @include font-primary();
  font-size: rem-calc($h3);
  font-weight: 400;
  font-style: italic;
  color: color(dusk);
}
@mixin h4() {
  @include font-secondary();
  font-size: rem-calc($h4);
  font-weight: 600;
  line-height: 1.33;
  color: color(orange);
}
@mixin h5() {
  @include font-secondary();
  font-size: rem-calc($h5);
  font-weight: 400;
  color: color(orange);
}
@mixin p() {
  @include font-secondary();
  font-size: rem-calc($body);
  font-weight: 300;
  line-height: 1.5;
}
@mixin a() {
  @include font-secondary();
  font-weight: 300;
  color: $link-color;
  text-decoration: none;
  font-size: rem-calc($body);
}
@mixin small() {
  @include font-primary();
  font-size: rem-calc($small);
}
@mixin button($backgroundColor: color(orange), $color: color(white), $hover: color(plum)) {
  display: inline-block;
  @include font-secondary();
  font-weight: 500;
  font-size: rem-calc(14);
  margin-top: rem-calc($spacer-3);
  padding: rem-calc($spacer-1) rem-calc(25);
  background-color: $backgroundColor;
  color: $color;
  text-decoration: none;
  transition: color 400ms ease;
  &:hover {
    color: $hover;
  }
}

// ======================================================
// Floats - Hey, how about, don't use floats for layout
// ======================================================

@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

// ======================================
// Alignment
// ======================================

@mixin center() {
  margin-left: auto;
  margin-right: auto;
}

@mixin left() {
  margin-right: auto;
}

@mixin right() {
  margin-left: auto;
}

// ======================================
// Background
// ======================================

@mixin background($color: orange) {
  background: url("{{ 'purple-flourish-lg.png' | asset_url }}") no-repeat color($color);
  background-position: 0px -10px;
  background-size: percentage(600 / 1440) auto;
  @include respond-to(mobile-plus) {
    background-size: percentage(400 / 1440) auto;
  }
  @include respond-to(ipad-portrait) {
    background-size: percentage(277 / 1440) auto;
  }
}

@mixin border($color) {
  border-top: rem-calc(30) solid $color;
}
// ======================================
// Container
// ======================================

@mixin container($max-width: 745px) {
  position: relative;
  width: 100%;
  max-width: $max-width;
  @include center();
}
